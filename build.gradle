buildscript {
    repositories {
        maven {
            url "https://maven.google.com"
        }
        mavenCentral()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

ext {
    bintrayRepo = 'Maven'
    bintrayName = 'clevertap-segment-integration'
    org = 'clevertap'

    publishedGroupId = 'com.clevertap.android'
    libraryName = 'clevertap-segment-integration'
    artifact = 'clevertap-segment-android'

    libraryDescription = 'CleverTap Integration for Segment Android Analytics'

    siteUrl = 'https://github.com/CleverTap/clevertap-segment-android'
    gitUrl = 'https://github.com/CleverTap/clevertap-segment-android.git'

    libraryVersion = '1.2.0'

    developerId = 'clevertap'
    developerName = 'CleverTap'
    developerEmail = 'support@clevertap.com'

    licenseName = 'The MIT License (MIT)'
    licenseUrl = 'http://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

version = libraryVersion
group = publishedGroupId

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

// Bintray
Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = org
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = false
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://maven.google.com"
        }

    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'com.segment.analytics.android:analytics:4.5.0'
    compileOnly 'androidx.annotation:annotation:1.1.0'

    implementation 'com.clevertap.android:clevertap-android-sdk:4.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    testImplementation 'com.segment.analytics.android:analytics-tests:4.5.0'

    testImplementation 'org.assertj:assertj-core:2.6.0'

    testImplementation 'org.powermock:powermock:1.6.2'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation "org.json:json:20140107"
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
